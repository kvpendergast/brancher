{
  "version": 3,
  "sources": ["../../../app/routes/draw.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/draw.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/draw.tsx\");\n  import.meta.hot.lastModified = \"1699324554445.028\";\n}\n// REMIX HMR END\n\nimport React, { useState, useEffect } from 'react';\nconst DraggableRectangle = () => {\n  _s();\n  const [rectangles, setRectangles] = useState([{\n    id: 1,\n    x: 50,\n    y: 50,\n    width: 200,\n    height: 100,\n    dragging: false\n  }, {\n    id: 2,\n    x: 300,\n    y: 150,\n    width: 200,\n    height: 100,\n    dragging: false\n  }]);\n  const [dragStart, setDragStart] = useState({\n    id: null,\n    x: 0,\n    y: 0\n  });\n  const onDragStart = (id, e) => {\n    const rect = rectangles.find(r => r.id === id);\n    setDragStart({\n      id,\n      x: e.clientX - rect.x,\n      y: e.clientY - rect.y\n    });\n    setRectangles(rects => rects.map(rect => rect.id === id ? {\n      ...rect,\n      dragging: true\n    } : rect));\n  };\n  const onDrag = e => {\n    if (dragStart.id !== null) {\n      const newX = e.clientX - dragStart.x;\n      const newY = e.clientY - dragStart.y;\n      setRectangles(rects => rects.map(rect => rect.id === dragStart.id ? {\n        ...rect,\n        x: newX,\n        y: newY\n      } : rect));\n    }\n  };\n  const onDragEnd = () => {\n    setRectangles(rects => rects.map(rect => rect.dragging ? {\n      ...rect,\n      dragging: false\n    } : rect));\n    setDragStart({\n      id: null,\n      x: 0,\n      y: 0\n    });\n  };\n  useEffect(() => {\n    if (dragStart.id !== null) {\n      document.addEventListener('mousemove', onDrag);\n      document.addEventListener('mouseup', onDragEnd);\n    }\n    return () => {\n      document.removeEventListener('mousemove', onDrag);\n      document.removeEventListener('mouseup', onDragEnd);\n    };\n  }, [dragStart, rectangles]);\n  const getCenter = rect => ({\n    x: rect.x + rect.width / 2,\n    y: rect.y + rect.height / 2\n  });\n\n  // Calculate line coordinates based on rectangles' centers\n  const lineCoords = {\n    x1: getCenter(rectangles[0]).x,\n    y1: getCenter(rectangles[0]).y,\n    x2: getCenter(rectangles[1]).x,\n    y2: getCenter(rectangles[1]).y\n  };\n  return <div style={{\n    width: '100%',\n    height: '500px',\n    position: 'relative',\n    border: '1px solid black',\n    overflow: 'hidden' // Prevents scrollbars from appearing during drag\n  }}>\n      <svg style={{\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      pointerEvents: 'none'\n    }}>\n        <line x1={lineCoords.x1} y1={lineCoords.y1} x2={lineCoords.x2} y2={lineCoords.y2} stroke=\"black\" strokeWidth=\"2\" />\n      </svg>\n      {rectangles.map(rectangle => <div key={rectangle.id} style={{\n      width: `${rectangle.width}px`,\n      height: `${rectangle.height}px`,\n      position: 'absolute',\n      top: `${rectangle.y}px`,\n      left: `${rectangle.x}px`,\n      backgroundColor: rectangle.dragging ? '#FFAAAA' : '#FF0000',\n      cursor: 'grab'\n    }} onMouseDown={e => onDragStart(rectangle.id, e)}>\n          {/* You can add a button or any content here */}\n        </div>)}\n    </div>;\n};\n_s(DraggableRectangle, \"EF7PDTYg0ZKevsB1DiZiNuoHfag=\");\n_c = DraggableRectangle;\nexport default DraggableRectangle;\nvar _c;\n$RefreshReg$(_c, \"DraggableRectangle\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["rect"]
}
